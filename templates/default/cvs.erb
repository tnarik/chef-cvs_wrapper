# CVS WRAPPER TO USE WHEN REQUIRING THE USE OF A TUNNEL
function cvs() {
  # Extract CVSROOT with priorities
  # 1. -d
  local DARG=`expr " $*" : '\ \(-d.*\)'`
  local OPTIND
  local FOUND_CVSROOT=""
  while getopts ":d:" opts $DARG; do
    case $opts in
      "d") FOUND_CVSROOT=$OPTARG
      ;;
    esac
  done

  # 2. CVS/Root
  if [ -z "$FOUND_CVSROOT" ]; then
    FOUND_CVSROOT=$(<CVS/Root)
  fi

  # 3. $CVSROOT
  if [ -z "$FOUND_CVSROOT" ]; then
    FOUND_CVSROOT=$CVSROOT
  fi

  local TARGET=`expr "$FOUND_CVSROOT" : '.*@\([^/]*\)\/.*'`
  TARGET=${TARGET//:/_}

#echo "$TARGET" >> /tmp/targets_cvs
#echo "$*" >> /tmp/targets_cvs
 
  local DIRECT_CONNECTION=true
  if [ -n "$TARGET" ]; then
    echo "let's read a configuration/status file about $TARGET"

    DIRECT_CONNECTION=false
    local TUNNEL_NAME="vftunnel"
    local TUNNEL_SLEEP="1"
  fi

  if [ $DIRECT_CONNECTION == true ]; then
    #execute the real CVS
    command cvs "$@"
  else
    #execute CVS through an SSH tunnel
    ssh -f ${TUNNEL_NAME} sleep ${TUNNEL_SLEEP}
    command cvs "$@"
  fi
}